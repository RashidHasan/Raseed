@model IEnumerable<Expense_Tracker.Models.Chat.UserViewModel>

<div class="container mt-5">
    <h2 class="text-center mb-4" style="color: var(--text-color);">Find a Friend</h2>

    <div class="input-group mb-3">
        <input type="text" id="searchQuery" class="form-control" placeholder="Enter full name" oninput="searchUsers()" required />
    </div>
    <div id="searchResults" class="list-group"></div>

    <!-- Response Message Container -->
    <div id="responseMessage" class="mt-3"></div>

    @if (Model != null && Model.Any())
    {
        <ul class="list-group mt-4">
            @foreach (var user in Model)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center" style="background-color: var(--background-color-secondary); color: var(--text-color);">
                    <span>@user.FullName</span>
                    <button onclick="sendFriendRequest(@user.Id)" class="btn btn-primary btn-sm">Send Friend Request</button>
                </li>
            }
        </ul>
    }
    else
    {
        <p class="text-muted text-center">No users found.</p>
    }
</div>

@section Scripts {
    <script>
        // Function to search users
        async function searchUsers() {
            const query = document.getElementById("searchQuery").value;
            if (query.trim() === "") {
                document.getElementById("searchResults").innerHTML = "";
                return;
            }

            const response = await fetch(`/Friend/Search?searchQuery=${encodeURIComponent(query)}`);
            if (response.ok) {
                const html = await response.text();
                document.getElementById("searchResults").innerHTML = html;
            } else {
                document.getElementById("searchResults").innerHTML = "<p class='text-muted'>No users found.</p>";
            }
        }

        // Function to send a friend request and handle the response
        async function sendFriendRequest(receiverId) {
            const response = await fetch(`/Friend/SendFriendRequest`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() // CSRF token
                },
                body: JSON.stringify({ receiverId: receiverId })
            });

            const result = await response.json();
            const messageContainer = document.getElementById("responseMessage");

            // Display message in Bootstrap alert format
            messageContainer.innerHTML = `<div class="alert ${result.success ? 'alert-success' : 'alert-danger'}">${result.message}</div>`;
        }
    </script>
}
